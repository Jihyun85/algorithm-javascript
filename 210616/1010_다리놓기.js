// No.1010 다리 놓기
// 재원이는 한 도시의 시장이 되었다. 이 도시에는 도시를 동쪽과 서쪽으로 나누는 큰 일직선 모양의 강이 흐르고 있다. 하지만 재원이는 다리가 없어서 시민들이 강을 건너는데 큰 불편을 겪고 있음을 알고 다리를 짓기로 결심하였다. 강 주변에서 다리를 짓기에 적합한 곳을 사이트라고 한다. 재원이는 강 주변을 면밀히 조사해 본 결과 강의 서쪽에는 N개의 사이트가 있고 동쪽에는 M개의 사이트가 있다는 것을 알았다. (N ≤ M)

// 재원이는 서쪽의 사이트와 동쪽의 사이트를 다리로 연결하려고 한다. (이때 한 사이트에는 최대 한 개의 다리만 연결될 수 있다.) 재원이는 다리를 최대한 많이 지으려고 하기 때문에 서쪽의 사이트 개수만큼 (N개) 다리를 지으려고 한다. 다리끼리는 서로 겹쳐질 수 없다고 할 때 다리를 지을 수 있는 경우의 수를 구하는 프로그램을 작성하라.

// mCn 인건 알겠는데...  문제를 푼 뒤에 이해하려고 노력하자..
// 파스칼의 삼각형 공식을 이용하여 ary 만듬
// nCk = n-1Ck-1 + n-1Ck
// 단, n이나 k가 0이거나 n = k 이면 값은 무조건 1임

let input = ["3", "2 2", "1 5", "13 29"];

let ary = Array.from(Array(31), () => new Array(31));

for (let i = 0; i <= 30; i++) {
  for (let j = 0; j <= i; j++) {
    if (i == 0 || j == 0 || j == i) ary[i][j] = 1;
    // nCk에서 n이 0이거나 k가 0이거나 n = k 이거나
    else ary[i][j] = ary[i - 1][j - 1] + ary[i - 1][j]; // 파스칼의 삼각형 공식
  }
}

for (let i = 1; i <= Number(input[0]); i++) {
  let [N, M] = input[i].split(" ").map((numStr) => Number(numStr));
  console.log(ary[M][N]);
}
